use Skilaverkefni;

delimiter $$
drop procedure if exists StudentJSon $$
create procedure StudentJSon()
begin
declare fn varchar(255);
declare ln varchar(255);
declare dob date;
declare done int default false;
    declare nemendur longtext;
   
    declare cursorName cursor 
		for select Students.firstName, Students.lastName, Students.dob from Students;
           
declare continue handler for not found set done = true;
set nemendur = '[';
open cursorName;
   
coursorName: loop
fetch cursorName into fn,ln,dob;
        if done then leave coursorName;
end if:
        set nemendur = concat(nemendur, '{"first_name": ','"', fn,'", ',
										'"last_name": ','"', ln, '", ',
                                        '"date_of_birth": ','"', dob, '"},');
end loop;

	set nemendur = trim(trailing ',' from nemendur);
set nemendur = concat(nemendur,']');

close cursorName;
select nemendur;
end $$
delimiter ;
call StudentJSon();

delimiter $$
drop procedure if exists SingleStudentJSon $$
create procedure SingleStudentJSon()
begin
declare cn varchar(255);
declare st varchar(255);
declare pass bool;
declare done int default false;
    declare nemendur longtext;
   
    declare cursorName
cursor for
select Courses.courseNumber, Courses.courseCredits, Registration.passed
from Courses
join Registration on Courses.courseNumber = Registration.courseNumber;

declare continue handler for not found set done = true;
set nemendur = '[';

select concat('"studentID": ','"', Students.studentID,'", ',
			  '"firstName": ','"', Students.firstName,'", ',
			  '"lastName": ','"', Students.lastName,'", ',
              '"date_of_birth": ','"', Students.dob,'"},') into nemendur
from Students
where Students.studentID = 1;

open cursorName;

coursorName: loop
fetch cursorName into cn,st,pass;
        if done then leave coursorName;
end if;
        set nemendur = concat(nemendur, '{"courseNumber": ','"', cn,'", ',
										'"courseCredits": ','"', st,'", ',
                                        '"status": ','"', pass, '"},');
end loop;

	set nemendur = trim(trailing ',' from nemendur);
set nemendur = concat(nemendur,']');

close cursorName;
select nemendur;

end $$
delimiter ;
call SingleStudentJSon();

delimiter $$
drop procedure if exists SemesterInfoJSon $$
create procedure SemesterInfoJSon()
begin
declare si int;
declare fn varchar(255);
declare ln varchar(255);
declare ct int;

declare done int default false;
    
    declare nemendur longtext;
   
    declare cursorName
cursor for
select Students.studentID, Students.firstName, Students.lastName, count(courseNumber) as number_of_courses
from Students
inner join Registration on Students.studentID = Registration.studentID
and Registration.semesterID = si
group by Students.studentID;

declare continue handler for not found set done = true;
set nemendur = '[';

open cursorName;

coursorName: loop
fetch cursorName into si,fn,ln,ct;
        if done then leave coursorName;
end if;
        set nemendur = concat(nemendur, '{"student_id": ','"', si,'", ',
										'"first_name": ','"', fn,'", ',
                                        '"last_name": ','"', ln,'", ',
                                        '"course_taken": ','"', ct, '"},');
end loop;

	set nemendur = trim(trailing ',' from nemendur);
set nemendur = concat(nemendur,']');

close cursorName;
select nemendur;

end $$
delimiter ;
call SemesterInfoJSon();
